openapi: 3.0.0

info:
  title: ONCHAIN.IO API overview
  version: v2
  
servers:
  - url: https://onchain.io/api
    description: Main production server


components:

  securitySchemes:
    ApiKeyAuth:        # arbitrary name for the security scheme
      type: apiKey
      in: header       # can be "header", "query" or "cookie"
      name: X-API-KEY  # name of the header, query parameter or cookie
      
  schemas:

    coin:
      enum:
        - bitcoin
        - testnet3
        - litecoin
        - ethereum
        - bitcoin_private
        - bitcoin_gold
        - dash
        - zcash
        - zclassic
    
    balance:
      type: object
      properties:
        usd_balance:
          type: integer
          example: 120.34
        balance:
          type: integer
          example: 27018060
        unconfirmed_balance:
          type: integer
          example: 27018060
        human_balance:
          type: number
          example: 0.2701806
        human_unconfirmed_balance:
          type: number
          example: 0.2701806
          
    addr_balance:
      type: object
      properties:
        address:
          type: string
          example: "1KFHE7w8BhaENAswwryaoccDb6qcT6DbYY"
        usd_balance:
          type: integer
          example: 120.34
        balance:
          type: integer
          example: 27018060
        unconfirmed_balance:
          type: integer
          example: 27018060
        human_balance:
          type: number
          example: 0.2701806
        human_unconfirmed_balance:
          type: number
          example: 0.2701806
    
    balances:
      type: object
      properties:
        totals:
          $ref: '#/components/schemas/balance'
        addresses:
          items:
            $ref: '#/definitions/addr_balance'
          type: array
          
    vins:
      type: object
      properties:
        amount:
          type: integer
          example: 395260
        address:
          type: string
          example: 1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX
          
    vouts:
      type: object
      properties:
        amount:
          type: integer
          example: 395260
        address:
          type: string
          example: 1F1tAaz5x1HUXrCNLbtMDqcw6o5GNn4xqX
          
    tx:
      type: object
      properties:
        blockheight:
          type: integer
          example: 48138
        time:
          type: integer
          example: 1524579200
        total_out:
          type: integer
          example: 1
        total_in:
          type: integer
          example: 1
        fees:
          type: integer
          example: 40000
        vins:
          type: array
          items:
            $ref: '#/components/schemas/vins'
        vouts:
          type: array
          items:
            $ref: '#/components/schemas/vouts'
    
    utxo:
      type: object
      properties:
        amount:
          type: integer
          example: 395260
        vout:
          type: integer
          example: 1
        txid:
          type: string
          example: 9bd89c6555d42a2e0922f32f9227440def71ffc4e03ac6eda4c79ebbc0ceed1f
        script_pub_key:
          type: string
          example: 76a91404d075b3f501deeef5565143282b6cfe8fad5e9488ac
          
    history:
      type: object
      properties:
        total_txs:
          type: integer
          example: 37000
        txs:
          type: array
          items:
            $ref: '#/components/schemas/tx'
    
paths:
  /address/balance/{coin}/{address}:
    get:
      tags:
        - Address API
      parameters:
        - in: path
          name: coin   # Note the name is the same as in the path
          required: true
          type: string
          schema:
            $ref: '#/components/schemas/coin'
          description: The name of the coin i.e. bitcoin
        - in: path
          name: address   # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: The public address to lookup
      operationId: Get Balance
      summary: Get Balance
      description: Returns the satoshi balance, usd balance and user viewable balance for an address
      responses:
        '200':
          description: Returns the balances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balance"
                
  /address/balances/{coin}/{addresses}:
    get:
      tags:
        - Address API
      parameters:
        - in: path
          name: coin   # Note the name is the same as in the path
          required: true
          type: string
          schema:
            $ref: '#/components/schemas/coin'
          description: The name of the coin i.e. bitcoin
        - in: path
          name: addresses   # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: A comma seperated list of public addresses
      operationId: Get Balances
      summary: Get Balances
      description: Returns the satoshi balance, usd balance and user viewable balance for a set of addresses
      responses:
        '200':
          description: Returns the balances
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/balances"
            
  /address/history/{coin}/{addresses}:
    get:
      tags:
        - Address API
      parameters:
        - in: path
          name: coin   # Note the name is the same as in the path
          required: true
          type: string
          schema:
            $ref: '#/components/schemas/coin'
          description: The name of the coin i.e. bitcoin
        - in: path
          name: addresses   # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: A comma seperated list of public addresses
      operationId: Get History
      summary: Get History
      description: Returns the transaction history for an address or addresses.
      responses:
        '200':
          description: Returns the transaction history for an address or addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/history"
                  
  /address/utxo/{coin}/{addresses}:
    get:
      tags:
        - Address API
      parameters:
        - in: path
          name: coin   # Note the name is the same as in the path
          required: true
          type: string
          schema:
            $ref: '#/components/schemas/coin'
          description: The name of the coin i.e. bitcoin
        - in: path
          name: addresses   # Note the name is the same as in the path
          required: true
          schema:
            type: string
          description: A comma seperated list of public addresses
      operationId: Get Unspent
      summary: Get Unspent Outs
      description: Returns the unspent outputs for an address or addresses.
      responses:
        '200':
          description: Returns the unspent outputs for an address or addresses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/utxo"
                  
  /transaction/send/{coin}/{rawtx}:
    post:
      tags:
        - Transaction API
      parameters:
        - in: path
          name: coin   # Note the name is the same as in the path
          required: true
          type: string
          schema:
            $ref: '#/components/schemas/coin'
          description: The name of the coin i.e. bitcoin
        - in: path
          name: rawtx   
          required: true
          schema:
            type: string
          description: The raw signed transaction as a hex string
      operationId: Send TX
      summary: Send Transaction
      description: Send a transaction onto the network.
      responses:
        default:
          description: Send a transaction onto the network.
          content:
            application/json:
              schema:
                properties:
                  status_code:
                    type: integer
                    example: 200
                  message:
                    type: string
                    example: 3bcf74e3421148db08daf6f5787a698534046bff54b2af1b8252b9166f8f4749